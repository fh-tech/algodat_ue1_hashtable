=== inserting ===
std::unordered_map: average: 258ns from 10000 iterationsto insert 1 random share with load factor:0
std::unordered_map: average: 531ns from 10000 iterationsto insert 1 random share with load factor:0.23497
std::unordered_map: average: 632ns from 10000 iterationsto insert 1 random share with load factor:0.46994
std::unordered_map: average: 837ns from 10000 iterationsto insert 1 random share with load factor:0.704911
std::unordered_map: average: 903ns from 10000 iterationsto insert 1 random share with load factor:0.845801
hashtable: average: 124ns from 10000 iterationsto insert 1 random share with load factor:0
hashtable: average: 185ns from 10000 iterationsto insert 1 random share with load factor:0.25
hashtable: average: 242ns from 10000 iterationsto insert 1 random share with load factor:0.5
hashtable: average: 361ns from 10000 iterationsto insert 1 random share with load factor:0.75
hashtable: average: 572ns from 10000 iterationsto insert 1 random share with load factor:0.9
vector: average: 2223ns from 10000 iterations to insert 1 random share at random position
vector: average: 26ns from 10000 iterations to insert 1 random share at back
list: average: 5762ns from 10000 iterations to insert 1 random share at back
list: average: 124ns from 10000 iterations to insert 1 random share at rand pos
=== look up ===
hashtable: average: 89ns from 10000 iterations to look up 1 random share with load factor: 0.1
hashtable: average: 109ns from 10000 iterations to look up 1 random share with load factor: 0.25
hashtable: average: 138ns from 10000 iterations to look up 1 random share with load factor: 0.5
hashtable: average: 164ns from 10000 iterations to look up 1 random share with load factor: 0.75
hashtable: average: 213ns from 10000 iterations to look up 1 random share with load factor: 0.9
vector: average: 4111ns from 10000 iterations to look up 1 random share by key
list: average: 6844ns from 10000 iterations to look up 1 random share by key
vector: average: 19ns from 10000 iterations to look up 1 random share by pos
list: average: 5435ns from 10000 iterations to look up 1 random share by pos
deleting
hashtable: average: 105ns from 10000 iterations to look up 1 element after filling up to 0.95and then deleting to0.1
